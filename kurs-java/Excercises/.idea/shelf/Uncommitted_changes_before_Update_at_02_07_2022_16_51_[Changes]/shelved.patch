Index: ../../.gitignore
===================================================================
diff --git a/../../.gitignore b/../../.gitignore
deleted file mode 100644
--- a/../../.gitignore	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
+++ /dev/null	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
@@ -1,2 +0,0 @@
-# Compiled class file
-*.class
Index: ../JdbcMysqlConection/.idea/.gitignore
===================================================================
diff --git a/../JdbcMysqlConection/.idea/.gitignore b/../JdbcMysqlConection/.idea/.gitignore
deleted file mode 100644
--- a/../JdbcMysqlConection/.idea/.gitignore	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
+++ /dev/null	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../Arrays/.idea/.gitignore
===================================================================
diff --git a/../Arrays/.idea/.gitignore b/../Arrays/.idea/.gitignore
deleted file mode 100644
--- a/../Arrays/.idea/.gitignore	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
+++ /dev/null	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../JdbcMysqlConection/src/PrimaryProgram.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.Statement;\r\nimport java.sql.*;\r\npublic class PrimaryProgram {\r\n\r\n\r\n\r\n\r\n\r\n           // JDBC driver name and database URL\r\n           static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\";\r\n           static final String DB_URL = \"jdbc:mysql://localhost/student\";\r\n\r\n           //  Database credentials\r\n           static final String USER = \"root\";\r\n           static final String PASS = \"pazdziorko1991\";\r\n\r\n           public static void main(String[] args) {\r\n               Connection conn = null;\r\n               Statement stmt = null;\r\n               try{\r\n                   //STEP 2: Register JDBC driver\r\n                   Class.forName(\"com.mysql.cj.jdbc.Driver\");\r\n\r\n                   //STEP 3: Open a connection\r\n                   System.out.println(\"You are connected to database\");\r\n                   conn = DriverManager.getConnection(DB_URL,USER,PASS);\r\n\r\n                   //STEP 4: Execute a query\r\n                   System.out.println(\"Creating statement...\");\r\n                   stmt = conn.createStatement();\r\n                   String sql;\r\n                   sql = \"SELECT id, per FROM percentage\";\r\n                   ResultSet rs = stmt.executeQuery(sql);\r\n\r\n                   //STEP 5: Extract data from result set\r\n                   while(rs.next()){\r\n                       //Retrieve by column name\r\n                       int id  = rs.getInt(\"id\");\r\n                       String first = rs.getString(\"per\");\r\n\r\n\r\n                       //Display values\r\n                       System.out.print(\"ID: \" + id);\r\n                       System.out.print(\", First: \" + first);\r\n\r\n                   }\r\n                   //STEP 6: Clean-up environment\r\n                   rs.close();\r\n                   stmt.close();\r\n                   conn.close();\r\n               }catch(SQLException se){\r\n                   //Handle errors for JDBC\r\n                   se.printStackTrace();\r\n               }catch(Exception e){\r\n                   //Handle errors for Class.forName\r\n                   e.printStackTrace();\r\n               }finally{\r\n                   //finally block used to close resources\r\n                   try{\r\n                       if(stmt!=null)\r\n                           stmt.close();\r\n                   }catch(SQLException se2){\r\n                   }// nothing we can do\r\n                   try{\r\n                       if(conn!=null)\r\n                           conn.close();\r\n                   }catch(SQLException se){\r\n                       se.printStackTrace();\r\n                   }//end finally try\r\n               }//end try\r\n               System.out.println(\" Goodbye!\");\r\n           }//end main\r\n       }//end FirstExample\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../JdbcMysqlConection/src/PrimaryProgram.java b/../JdbcMysqlConection/src/PrimaryProgram.java
--- a/../JdbcMysqlConection/src/PrimaryProgram.java	(revision 0174c73e6379e15c7b56b2d1182d7585b5400899)
+++ b/../JdbcMysqlConection/src/PrimaryProgram.java	(date 1656608486354)
@@ -18,22 +18,25 @@
            static final String PASS = "pazdziorko1991";
 
            public static void main(String[] args) {
-               Connection conn = null;
-               Statement stmt = null;
+               Connection con = null;
+               Statement stm = null;
+
+
+
                try{
                    //STEP 2: Register JDBC driver
                    Class.forName("com.mysql.cj.jdbc.Driver");
 
                    //STEP 3: Open a connection
                    System.out.println("You are connected to database");
-                   conn = DriverManager.getConnection(DB_URL,USER,PASS);
+                   con = DriverManager.getConnection(DB_URL,USER,PASS);
 
                    //STEP 4: Execute a query
                    System.out.println("Creating statement...");
-                   stmt = conn.createStatement();
+                   stm = con.createStatement();
                    String sql;
                    sql = "SELECT id, per FROM percentage";
-                   ResultSet rs = stmt.executeQuery(sql);
+                   ResultSet rs = stm.executeQuery(sql);
 
                    //STEP 5: Extract data from result set
                    while(rs.next()){
@@ -49,8 +52,8 @@
                    }
                    //STEP 6: Clean-up environment
                    rs.close();
-                   stmt.close();
-                   conn.close();
+                   stm.close();
+                   con.close();
                }catch(SQLException se){
                    //Handle errors for JDBC
                    se.printStackTrace();
@@ -60,13 +63,13 @@
                }finally{
                    //finally block used to close resources
                    try{
-                       if(stmt!=null)
-                           stmt.close();
+                       if(stm!=null)
+                           stm.close();
                    }catch(SQLException se2){
                    }// nothing we can do
                    try{
-                       if(conn!=null)
-                           conn.close();
+                       if(con!=null)
+                           con.close();
                    }catch(SQLException se){
                        se.printStackTrace();
                    }//end finally try
